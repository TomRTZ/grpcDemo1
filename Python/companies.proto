//This .proto file defines the service for exchanging some fictive companies' information
//It also defines the massages used as requests and responses in these service
//It is part of a grpc demo
//To compile this file to generate java or python source codes, please refer to grpc tutorials
//http://www.grpc.io/docs/quickstart/python.html
//http://www.grpc.io/docs/quickstart/java.html
//as well as the readme.me files in the github repositories of grpc
//(personally, I think those tutorials and guidance for java is rather complex and confusing)
//In fact, the generated codes have already been generated in this demo

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.grpcDemo1";
option java_outer_classname = "CompaniesProto";


package companies;

// Interface exported by the server.
service Companies {
  // A simple RPC.
  //
  // Obtains the year in which the given company was founded.
  //
  // A default year 2900 will be returned if the company name is not in the database.
  rpc GetFoundingYear(Name) returns (FoundingYear) {}

  // A server-to-client streaming RPC.
  //
  // Obtains all the companies' name which was founded in the given year
  rpc ListCompanies(FoundingYear) returns (stream Name) {}

  // A client-to-server streaming RPC.
  //
  // Accepts a stream of company names, returning the average age of these companies
  // Average age here means the average exixting years of the given companies in year 2017
  rpc CalcAverageAge(stream Name) returns (AverageAge) {}

  // A Bidirectional streaming RPC.
  //
  // Accepts a stream of company names sent by the client,
  // Returns a stream of those companies information.
  rpc GetCompanyInformation(stream Name) returns (stream Company) {}
}

// Names are the companies' names.
// It is defined as a standalone message because it is used in some rpc methods
message Name {
  string name = 1;
}

// FoundingYears are the years in which the companies were founded respctively
// It is defined as a standalone message because it is used in some rpc methods
message FoundingYear {
  int32 year = 1;
}

// A AverageAge is the average exixting years of the given companies in year 2017
//
// It is calculated by the server according to the companies' name sent by the client
message AverageAge {
  int32 age = 1;
}

// A Company message contains all the information of a company
// The informaton includes its name, its founding year, and its market value
// The type of the field 'name' can be string, and the type of 'foundingYear' can be int32
// Corresponding massage types Name and FoundingYear are used just to show types can be nested
message Company {
  // The name of the company
  Name name = 1;

  // The year in which the company was founded.
  FoundingYear foundingYear = 2;
  
  // The current market value of the company. 
  // For simple, int32 is used instead of float
  int32 marketValue = 3;  //million dollars
}

// Not used in the RPC.  Instead, this is here for the form serialized to disk.
message CompanyDatabase {
  repeated Company company = 1;
}
